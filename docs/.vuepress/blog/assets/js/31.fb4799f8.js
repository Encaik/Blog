(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{537:function(t,n,a){"use strict";a.r(n);var e=a(20),s=Object(e.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"学习前端性能监控performanceapi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习前端性能监控performanceapi"}},[t._v("#")]),t._v(" 学习前端性能监控PerformanceApi")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("Performance 接口可以获取到当前页面中与性能相关的信息。它是 High Resolution Time API 的一部分，同时也融合了 Performance Timeline API、Navigation Timing API、 User Timing API 和 Resource Timing API。")]),t._v(" "),a("p",[t._v("该类型的对象可以通过调用只读属性 Window.performance 来获得。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" performance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("performance\n")])])]),a("p",[a("code",[t._v("window.performance")]),t._v("返回结构为：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("memory:其是 Chrome 添加的一个"),a("code",[t._v("非标准扩展")]),t._v("，这个属性提供了一个可以获取到基本内存使用情况的对象。不应该使用这个非标准的 API。")])]),t._v(" "),a("li",[a("p",[t._v("navigation:PerformanceNavigation 对象提供了在指定的时间段里发生的操作相关信息，包括页面是加载还是刷新、发生了多少次重定向等等。")])]),t._v(" "),a("li",[a("p",[t._v("onresourcetimingbufferfull:一个回调的 EventTarget，当触发 resourcetimingbufferfull 事件的时候会被调用。")])]),t._v(" "),a("li",[a("p",[t._v("timeOrigin:返回性能测量开始时的时间的高精度时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("timing:是一个PerformanceTiming 对象,包含延迟相关的性能信息。")])])]),t._v(" "),a("p",[t._v("这其中，最常用的是timing对象，其结构为:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("navigationStart:是一个无符号long long 型的毫秒数，表征了从同一个浏览器上下文的上一个文档卸载(unload)结束时的UNIX时间戳。如果没有上一个文档，这个值会和PerformanceTiming.fetchStart相同。")])]),t._v(" "),a("li",[a("p",[t._v("redirectStart:是一个无符号long long 型的毫秒数，表征了第一个HTTP重定向开始时的UNIX时间戳。如果没有重定向，或者重定向中的一个不同源，这个值会返回0.")])]),t._v(" "),a("li",[a("p",[t._v("redirectEnd:是一个无符号long long 型的毫秒数，表征了最后一个HTTP重定向完成时（也就是说是HTTP响应的最后一个比特直接被收到的时间）的UNIX时间戳。如果没有重定向，或者重定向中的一个不同源，这个值会返回0.")])]),t._v(" "),a("li",[a("p",[t._v("fetchStart:是一个无符号long long 型的毫秒数，表征了浏览器准备好使用HTTP请求来获取(fetch)文档的UNIX时间戳。这个时间点会在检查任何应用缓存之前。")])]),t._v(" "),a("li",[a("p",[t._v("domainLookupStart:是一个无符号long long 型的毫秒数，表征了域名查询开始的UNIX时间戳。如果使用了持续连接(persistent connection)，或者这个信息存储到了缓存或者本地资源上，这个值将和 PerformanceTiming.fetchStart一致。")])]),t._v(" "),a("li",[a("p",[t._v("domainLookupEnd:是一个无符号long long 型的毫秒数，表征了域名查询结束的UNIX时间戳。如果使用了持续连接(persistent connection)，或者这个信息存储到了缓存或者本地资源上，这个值将和 PerformanceTiming.fetchStart一致。")])]),t._v(" "),a("li",[a("p",[t._v("connectStart:是一个无符号long long 型的毫秒数，返回HTTP请求开始向服务器发送时的Unix毫秒时间戳。如果使用持久连接（persistent connection），则返回值等同于fetchStart属性的值。")])]),t._v(" "),a("li",[a("p",[t._v("secureConnectionStart:是一个无符号long long 型的毫秒数，返回浏览器与服务器开始安全链接的握手时的Unix毫秒时间戳。如果当前网页不要求安全连接，则返回0。")])]),t._v(" "),a("li",[a("p",[t._v("connectEnd:是一个无符号long long 型的毫秒数，返回浏览器与服务器之间的连接建立时的Unix毫秒时间戳。如果建立的是持久连接，则返回值等同于fetchStart属性的值。连接建立指的是所有握手和认证过程全部结束。")])]),t._v(" "),a("li",[a("p",[t._v("requestStart:是一个无符号long long 型的毫秒数，返回浏览器向服务器发出HTTP请求时（或开始读取本地缓存时）的Unix毫秒时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("responseStart:是一个无符号long long 型的毫秒数，返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的Unix毫秒时间戳。如果传输层在开始请求之后失败并且连接被重开，该属性将会被数制成新的请求的相对应的发起时间。")])]),t._v(" "),a("li",[a("p",[t._v("unloadEventStart:一个无符号long long 型的毫秒数，表征了unload事件抛出时的UNIX时间戳。如果没有上个文档，或上个文档非同源重定向, 这个值会返回0.")])]),t._v(" "),a("li",[a("p",[t._v("unloadEventEnd:是一个无符号long long 型的毫秒数，表征了unload事件处理完成时的UNIX时间戳。如果没有上个文档，或上个文档非同源重定向, 这个值会返回0.")])]),t._v(" "),a("li",[a("p",[t._v("responseEnd:是一个无符号long long 型的毫秒数，返回浏览器从服务器收到（或从本地缓存读取，或从本地资源读取）最后一个字节时（如果在此之前HTTP连接已经关闭，则返回关闭时）的Unix毫秒时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("domLoading:是一个无符号long long 型的毫秒数，返回当前网页DOM结构开始解析时（即Document.readyState属性变为“loading”、相应的 readystatechange事件触发时）的Unix毫秒时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("domInteractive:是一个无符号long long 型的毫秒数，返回当前网页DOM结构结束解析、开始加载内嵌资源时（即Document.readyState属性变为“interactive”、相应的readystatechange事件触发时）的Unix毫秒时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("domContentLoadedEventStart:是一个无符号long long 型的毫秒数，返回当解析器发送DOMContentLoaded 事件，即所有需要被执行的脚本已经被解析时的Unix毫秒时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("domContentLoadedEventEnd:是一个无符号long long 型的毫秒数，返回当所有需要立即执行的脚本已经被执行（不论执行顺序）时的Unix毫秒时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("domComplete:是一个无符号long long 型的毫秒数，返回当前文档解析完成，即Document.readyState 变为 'complete'且相对应的readystatechange 被触发时的Unix毫秒时间戳。")])]),t._v(" "),a("li",[a("p",[t._v("loadEventStart:是一个无符号long long 型的毫秒数，返回该文档下，load事件被发送时的Unix毫秒时间戳。如果这个事件还未被发送，它的值将会是0。")])]),t._v(" "),a("li",[a("p",[t._v("loadEventEnd:是一个无符号long long 型的毫秒数，返回当load事件结束，即加载事件完成时的Unix毫秒时间戳。如果这个事件还未被发送，或者尚未完成，它的值将会是0.")])]),t._v(" "),a("li",[a("p",[t._v('entryType:返回"navigation"。')])]),t._v(" "),a("li",[a("p",[t._v("name:返回文档的地址。")])]),t._v(" "),a("li",[a("p",[t._v("startTime:返回DOMHighResTimeStamp值为“ 0”的。")])]),t._v(" "),a("li",[a("p",[t._v("duration:返回与属性timestamp之间的差异的。PerformanceNavigationTiming.loadEventEnd - PerformanceEntry.startTime")])]),t._v(" "),a("li",[a("p",[t._v('initiatorType:返回"navigation"。')])]),t._v(" "),a("li",[a("p",[t._v("type:由string表示导航类型。必须为：“navigate”，“reload”，“back_forward”或“prerender”。")])]),t._v(" "),a("li",[a("p",[t._v("nextHopProtocol:由string表示网络协议用于获取资源，所确定的ALPN协议ID（RFC7301） 。")])]),t._v(" "),a("li",[a("p",[t._v("workerStart:如果Service Worker线程已经在运行，则DOMHighResTimeStamp在分配之前立即返回；FetchEvent如果尚未运行，则在启动Service Worker线程之前立即返回。如果服务工作者未拦截该资源，则该属性将始终返回0。")])]),t._v(" "),a("li",[a("p",[t._v("transferSize:由number表示所取出的资源的大小（以字节为单位）。该大小包括响应标头字段以及响应有效载荷主体。")])]),t._v(" "),a("li",[a("p",[t._v("encodedBodySize:由number表示的大小（以字节）从接收到的（HTTP或高速缓存），则取的有效载荷体，除去任何施加的内容编码之前。")])]),t._v(" "),a("li",[a("p",[t._v("decodedBodySize:是一个number，它是从消息主体的提取（HTTP或缓存）中接收到的大小（以八位字节为单位），该大小是在删除所有应用的内容编码后得出的。")])]),t._v(" "),a("li",[a("p",[t._v("serverTiming:PerformanceServerTiming包含服务器计时指标的条目数组。")])]),t._v(" "),a("li",[a("p",[t._v("redirectCount(不建议使用):旧版PerformanceNavigation.redirectCount只读属性返回一个unsigned short表示到达页面之前完成的REDIRECT数的数字。")])])]),t._v(" "),a("p",[t._v("通过这些属性，我们常用的计算方式有:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("重定向时长 = redirectEnd - redirectStart;")])]),t._v(" "),a("li",[a("p",[t._v("DNS查询时长 = domainLookupEnd - domainLookupStart;")])]),t._v(" "),a("li",[a("p",[t._v("TCP链接时长 = connectEnd - connectStart;")])]),t._v(" "),a("li",[a("p",[t._v("HTTP请求时长 = responseEnd - responseStart;")])]),t._v(" "),a("li",[a("p",[t._v("解析dom树时长 = domComplete - domInteractive;")])]),t._v(" "),a("li",[a("p",[t._v("白屏时长 = responseStart - navigationStart;")])]),t._v(" "),a("li",[a("p",[t._v("DOMready时长 = domContentLoadedEventEnd - navigationStart;")])]),t._v(" "),a("li",[a("p",[t._v("onload时长 = loadEventEnd - navigationStart;")])])]),t._v(" "),a("p",[t._v("最后稍微美化一下用表格输出:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" times "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("performance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redirectTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redirectEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redirectStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DNSTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domainLookupEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domainLookupStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TCPTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connectEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connectStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTTPTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DOMTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domComplete "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domInteractive "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("whiteTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigationStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fetchStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domContentLoadedEventEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigationStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fetchStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntimes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadEventEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigationStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fetchStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("times"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[a("code",[t._v("t.navigationStart || t.fetchStart")]),t._v("为我所使用的chrome浏览器获取后无navigationStart属性，文档说明无上个文档与fetchStart相同，因为写成了这种形式。")])])])}),[],!1,null,null,null);n.default=s.exports}}]);